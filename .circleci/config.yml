version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
      - image: circleci/mysql:5.7  # Contenedor MySQL
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    steps:
      - checkout
      - run: chmod +x ./mvnw
      - run: ./mvnw clean install

  test_general:
    docker:
      - image: cimg/openjdk:17.0
      - image: circleci/mysql:5.7  # Contenedor MySQL
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    parallelism: 2  # Dividir pruebas en 2 contenedores
    steps:
      - checkout
      - run: chmod +x ./mvnw
      - run: ./mvnw test -Dtest=SpringBootBackendApirestApplicationTests

  test_service:
    docker:
      - image: cimg/openjdk:17.0
      - image: circleci/mysql:5.7  # Contenedor MySQL
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    parallelism: 2  # Dividir pruebas en 2 contenedores
    steps:
      - checkout
      - run: chmod +x ./mvnw
      - run: ./mvnw test -Dtest=ClienteServiceImplTest

  package:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: chmod +x ./mvnw
      - run: ./mvnw clean package -DskipTests

  dependency-check:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: chmod +x ./mvnw
      - run: ./mvnw org.owasp:dependency-check-maven:check

workflows:
  version: 2
  build_and_test:
    jobs:
      - build  # Se ejecuta primero
      - test_general:
          requires:
            - build
      - test_service:
          requires:
            - build
      - dependency-check:
          requires:
            - build
      - package:
          requires:
            - test_general
            - test_service
            - dependency-check

notifications:
  - when: always  # Envía la notificación siempre que se complete un workflow
    branches:
      only:
        - main  # Solo para la rama principal
    email:
      recipients:
        - oxar.oa@gmail.com  # Correo electrónico del destinatario

